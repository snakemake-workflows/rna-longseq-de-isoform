samples: samples.csv


## General Workflow Parameters:

# Name of the Workflow:
workflow: "workflow-transcriptome-de_phe"

# this is the input directory. All samples are looked for in this directory
inputdir: "./ngs-test-data/reads"
# Repository URL:
repo: "https://github.com/snakemake-workflows/transriptome-differential-expression"

## Workflow-specific Parameters:

ref:
    # species
    species: "Homo sapiens"
    # Genome FA or FASTA or FNA
    genome: "./ngs-test-data/ref/genome.chr21.fa"
    # Annotation GFF or GTF
    annotation: "./ngs-test-data/ref/annotation.chr21.gtf"    
    # NCBI accession number of the reference data set.
    # empty, because every real reference is too big.
    accession: None

# Differential Isoform Analysis

# The differential isoform analysis pipeline uses FLAIR and includes resource-intensive computations and only works with additional constraints.
#     1. In 'samples.csv: The 'condition' column must contain exactly two distinct values. For example 'control' and 'treated'.
#     2. In 'samples.csv: Refrain from using underscores when naming samples. The 'sample' column may contain underscores, but be aware that underscores will be removed from the name for isoform quantification steps.
#     3. In this file: the variable 'isoform_analysis' below must be:'"yes"'. This is a check to determine if users are aware of the constraints and wish to proceed.
FLAIR:
    # Perform Differential Isoform Analysis with FLAIR?
    isoform_analysis: ""
    #FLAIR quality score. Minimum MAPQ of read assignment to an isoform (default 1).
    qscore: 1
    #FLAIR read count expression threshold. Isoforms in which both conditions contain fewer than E reads are filtered out (Default E=10).
    exp_thresh: 10
    # flair_collapse options. '--stringent' for full-length supporting reads (>=80% coverage)
    col_opts: "--stringent --support 1"

# Minimum read length, put 0 if you want to proceed with all reads.
min_length: 10

# Maximum number of CPUs in your partition/PC/server
max_cpus: 40

minimap2:
    # Minimap2 indexing options
    index_opts: ""

    # Minimap2 mapping options
    opts: ""

    # Maximum secondary alignments
    maximum_secondary: 100

    # Secondary score ratio (-p for minimap2)
    secondary_score_ratio: 1.0

# Samtools view opts, "-b" creates BAM from SAM.
samtobam_opts: "-b"

# Samtools sort opts,
bamsort_opts: ""

# Samtools index opts,
bamindex_opts: ""

# Salmon library type
salmon_libtype: "U"


# QC options

# Samtools stats opts
bamstats_opts: ""

# Count filtering options - customize these according to your experimental design:

# Genes expressed in minimum this many samples
min_samps_gene_expr: 3
# Transcripts expressed in minimum this many samples
min_samps_feature_expr: 1
# Minimum gene counts
min_gene_expr: 10
# Minimum transcript counts
min_feature_expr: 3


# This section defines the pyDESeq2 plot and data handling parameters
deseq2:
    # normalization fit type, must be 'parametric' or 'mean'
    fit_type: "mean"
    # the "design factors" are the confounding variables to be adjusted fr
    # during normalization. They must be given in the configuration (samples.csv).
    design_factors: 
        - "condition"
    #
    # the "continous factors" are non-categorial factors to be considered
    #continuous_factors:
    #    - 
    #
    # The (log2) log fold change under the null hypothesis. (default: 0).
    lfc_null: 0.5
    #
    # The alternative hypothesis for computing wald p-values. By default,
    # the normal Wald test assesses deviation of the estimated log fold
    # change from the null hypothesis, as given by lfc_null.
    # One of ["greaterAbs", "lessAbs", "greater", "less"] or None.
    # The alternative hypothesis corresponds to what the user wants to
    # find rather than the null hypothesis. (default: None).
    alt_hypothesis: "greaterAbs"
    #
    # The marker size in points**2 (typographic points are 1/72 in.).
    # Default is rcParams['lines.markersize'] ** 2.# minimum count to
    # be considered for subsequent analysis
    point_width: 20
    #
    # we disrecard loci with count number lower 'mincount'
    mincount: 10
    #
    # Type I error cutoff value:
    alpha: 10
    #
    # in addition to the full heatmap, plot the top number of different
    # values, ranked by the top ratio between the two traits
    threshold_plot: 10
    #
    # the heatmap color map
    # see https://seaborn.pydata.org/tutorial/color_palettes.htm for an overview
    colormap: "flare"
    #plot figure type
    figtype: "png"

